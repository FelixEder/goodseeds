{"ast":null,"code":"var toString = require('./toString');\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\n\n\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;","map":{"version":3,"sources":["/Users/Lara/Documents/Kurser/VT20/Dynwebb/goodseeds/node_modules/lodash/replace.js"],"names":["toString","require","replace","args","arguments","string","length","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,OAAT,GAAmB;AACjB,MAAIC,IAAI,GAAGC,SAAX;AAAA,MACIC,MAAM,GAAGL,QAAQ,CAACG,IAAI,CAAC,CAAD,CAAL,CADrB;AAGA,SAAOA,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkBD,MAAlB,GAA2BA,MAAM,CAACH,OAAP,CAAeC,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,CAAlC;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBN,OAAjB","sourcesContent":["var toString = require('./toString');\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nmodule.exports = replace;\n"]},"metadata":{},"sourceType":"script"}