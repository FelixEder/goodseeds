{"version":3,"sources":["../src/ReactReduxFirebaseProvider.js"],"names":["ReactReduxFirebaseProvider","props","children","config","dispatch","firebase","initializeAuth","createFirestoreInstance","extendedFirebaseInstance","React","useMemo","defaultProps","propTypes","PropTypes","node","object","isRequired","func","bool"],"mappings":"8yBAmBA,QAASA,CAAAA,0BAAT,EAAgD,IAAZC,CAAAA,KAAY,wDAAJ,EAAI,CAE5CC,QAF4C,CAQ1CD,KAR0C,CAE5CC,QAF4C,CAG5CC,MAH4C,CAQ1CF,KAR0C,CAG5CE,MAH4C,CAI5CC,QAJ4C,CAQ1CH,KAR0C,CAI5CG,QAJ4C,CAK5CC,QAL4C,CAQ1CJ,KAR0C,CAK5CI,QAL4C,CAM5CC,cAN4C,CAQ1CL,KAR0C,CAM5CK,cAN4C,CAO5CC,uBAP4C,CAQ1CN,KAR0C,CAO5CM,uBAP4C,CASxCC,wBAAwB,CAAGC,eAAMC,OAAN,CAC/B,UAAM,CACJ,GAAMF,CAAAA,wBAAwB,CAAG,oCAC/BH,QAD+B,CAE/BF,MAF+B,CAG/BC,QAH+B,CAAjC,CAQA,MAHIE,CAAAA,cAGJ,EAFEE,wBAAwB,CAACF,cAAzB,EAEF,CAAOE,wBACR,CAX8B,CAY/B,CAACH,QAAD,CAAWF,MAAX,CAAmBC,QAAnB,CAZ+B,CATa,OAwB1CG,CAAAA,uBAxB0C,CA0B1C,6BAAC,kCAAD,CAA2B,QAA3B,EAAoC,KAAK,CAAEC,wBAA3C,EACE,6BAAC,+BAAD,aAA4BP,KAA5B,EAAmC,cAAc,GAAjD,GACGC,QADH,CADF,CA1B0C,CAkC5C,6BAAC,kCAAD,CAA2B,QAA3B,EAAoC,KAAK,CAAEM,wBAA3C,EACGN,QADH,CAIH,CAEDF,0BAA0B,CAACW,YAA3B,CAA0C,CACxCL,cAAc,GAD0B,C,CAI1CN,0BAA0B,CAACY,SAA3B,CAAuC,CACrCV,QAAQ,CAAEW,mBAAUC,IADiB,CAErCX,MAAM,CAAEU,mBAAUE,MAAV,CAAiBC,UAFY,CAGrCZ,QAAQ,CAAES,mBAAUI,IAAV,CAAeD,UAHY,CAIrCX,QAAQ,CAAEQ,mBAAUE,MAAV,CAAiBC,UAJU,CAKrCV,cAAc,CAAEO,mBAAUK,IALW,CAMrCX,uBAAuB,CAAEM,mBAAUI,IANE,C,cASxBjB,0B","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport createFirebaseInstance from './createFirebaseInstance'\nimport ReactReduxFirebaseContext from './ReactReduxFirebaseContext'\nimport ReduxFirestoreProvider from './ReduxFirestoreProvider'\n\n/**\n * @description Provider for context containing extended firebase\n * instance created by react-redux-firebase.\n * @param {object} props - Component props\n * @param {object} props.config - react-redux-firebase config\n * @param {Function} props.dispatch - Redux's dispatch function\n * @param {object} props.firebase - Firebase library\n * @param {boolean} props.initializeAuth - Whether or not to initialize auth\n * @param {Function} props.createFirestoreInstance - Function for creating\n * extended firestore instance\n * @returns {React.Context.Provider} Provider for react-redux-firebase context\n * @see https://react-redux-firebase.com/api/docs/ReactReduxFirebaseProvider.html\n */\nfunction ReactReduxFirebaseProvider(props = {}) {\n  const {\n    children,\n    config,\n    dispatch,\n    firebase,\n    initializeAuth,\n    createFirestoreInstance\n  } = props\n  const extendedFirebaseInstance = React.useMemo(\n    () => {\n      const extendedFirebaseInstance = createFirebaseInstance(\n        firebase,\n        config,\n        dispatch\n      )\n      if (initializeAuth) {\n        extendedFirebaseInstance.initializeAuth()\n      }\n      return extendedFirebaseInstance\n    },\n    [firebase, config, dispatch]\n  )\n  // Initialize auth if not disabled\n  if (createFirestoreInstance) {\n    return (\n      <ReactReduxFirebaseContext.Provider value={extendedFirebaseInstance}>\n        <ReduxFirestoreProvider {...props} initializeAuth={false}>\n          {children}\n        </ReduxFirestoreProvider>\n      </ReactReduxFirebaseContext.Provider>\n    )\n  }\n  return (\n    <ReactReduxFirebaseContext.Provider value={extendedFirebaseInstance}>\n      {children}\n    </ReactReduxFirebaseContext.Provider>\n  )\n}\n\nReactReduxFirebaseProvider.defaultProps = {\n  initializeAuth: true\n}\n\nReactReduxFirebaseProvider.propTypes = {\n  children: PropTypes.node,\n  config: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  firebase: PropTypes.object.isRequired,\n  initializeAuth: PropTypes.bool,\n  createFirestoreInstance: PropTypes.func\n}\n\nexport default ReactReduxFirebaseProvider\n"],"file":"ReactReduxFirebaseProvider.js"}