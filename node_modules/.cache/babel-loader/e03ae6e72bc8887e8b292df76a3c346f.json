{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = withFirebase;\n\nvar _react = _interopRequireDefault(require(\"react\")),\n    _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\")),\n    _utils = require(\"./utils\"),\n    _ReactReduxFirebaseContext = _interopRequireDefault(require(\"./ReactReduxFirebaseContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  return _extends = Object.assign || function (target) {\n    for (var source, i = 1; i < arguments.length; i++) for (var key in source = arguments[i], source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n\n    return target;\n  }, _extends.apply(this, arguments);\n}\n\nfunction withFirebase(WrappedComponent) {\n  function WithFirebase(props) {\n    return _react.default.createElement(_ReactReduxFirebaseContext.default.Consumer, null, function (firebase) {\n      return _react.default.createElement(WrappedComponent, _extends({\n        firebase: firebase,\n        dispatch: firebase && firebase.dispatch\n      }, props));\n    });\n  }\n\n  return WithFirebase.displayName = (0, _utils.wrapDisplayName)(WrappedComponent, \"withFirebase\"), WithFirebase.wrappedComponent = WrappedComponent, (0, _hoistNonReactStatics.default)(WithFirebase, WrappedComponent);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["../src/withFirebase.js"],"names":["firebase","WithFirebase","WrappedComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AA4De;;AAAA,SAAA,YAAA,CAAA,gBAAA,EAAwC;AAMrD,WAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B,WACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,0BAAA,CAAD,OAAC,CAAD,QAAA,EAAA,IAAA,EACG,UAAA,QAAA,EAAQ;AAAA,aACP,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA;AACE,QAAA,QAAQ,EADV,QAAA;AAEE,QAAA,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAFhC;AAAA,OAAA,EADO,KACP,CAAA,CADO;AADX,KAAA,CADF;AAaFC;;AAAAA,SAAAA,YAAY,CAAZA,WAAAA,GAA2B,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,gBAAA,EAAA,cAAA,CAA3BA,EACAA,YAAY,CAAZA,gBAAAA,GAAgCC,gBADhCD,EAGO,CAAA,GAAA,qBAAA,CAAA,OAAA,EAAA,YAAA,EAAA,gBAAA,CAHPA","sourcesContent":["import React from 'react'\nimport hoistStatics from 'hoist-non-react-statics'\nimport { wrapDisplayName } from './utils'\nimport ReactReduxFirebaseContext from './ReactReduxFirebaseContext'\n\n/**\n * @augments React.Component\n * @description Higher Order Component that provides `firebase` and\n * `dispatch` as a props to React Components.\n * **NOTE**: This version of the Firebase library has extra methods, config,\n * and functionality which give it it's capabilities such as dispatching\n * actions.\n * @param {React.Component} WrappedComponent - React component to wrap\n * @returns {Function} - Which accepts a component to wrap and returns the\n * wrapped component\n * @see http://react-redux-firebase.com/docs/api/withFirebase.html\n * @example <caption>Basic</caption>\n * import React from 'react'\n * import { withFirebase } from 'react-redux-firebase'\n *\n * function AddTodo({ firebase: { push } }) {\n *   return (\n *     <div>\n *       <button onClick={() => push('todos', { done: false, text: 'Sample' })}>\n *         Add Sample Todo\n *       </button>\n *     </div>\n *   )\n * }\n *\n * export default withFirebase(AddTodo)\n * @example <caption>Within HOC Composition</caption>\n * import React from 'react'\n * import { compose } from 'redux' // can also come from recompose\n * import { withHandlers } from 'recompose'\n * import { withFirebase } from 'react-redux-firebase'\n *\n * function AddTodo({ addTodo }) {\n *   return (\n *     <div>\n *       <button onClick={addTodo}>\n *         Add Sample Todo\n *       </button>\n *     </div>\n *   )\n * }\n *\n * const enhance = compose(\n *   withFirebase,\n *   withHandlers({\n *     addTodo: props => () =>\n *        props.firestore.add(\n *          { collection: 'todos' },\n *          { done: false, text: 'Sample' }\n *        )\n *   })\n * )\n *\n * export default enhance(AddTodo)\n */\nexport default function withFirebase(WrappedComponent) {\n  /**\n   * WithFirebase wrapper component\n   * @param {object} props - Component props\n   * @returns {React.Component} WrappedComponent wrapped with firebase context\n   */\n  function WithFirebase(props) {\n    return (\n      <ReactReduxFirebaseContext.Consumer>\n        {firebase => (\n          <WrappedComponent\n            firebase={firebase}\n            dispatch={firebase && firebase.dispatch}\n            {...props}\n          />\n        )}\n      </ReactReduxFirebaseContext.Consumer>\n    )\n  }\n\n  WithFirebase.displayName = wrapDisplayName(WrappedComponent, 'withFirebase')\n  WithFirebase.wrappedComponent = WrappedComponent\n\n  return hoistStatics(WithFirebase, WrappedComponent)\n}\n"]},"metadata":{},"sourceType":"script"}