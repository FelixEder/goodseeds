{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.isInitializingReducer = isInitializingReducer, exports.requestingReducer = requestingReducer, exports.requestedReducer = requestedReducer, exports.timestampsReducer = timestampsReducer, exports.authReducer = authReducer, exports.authErrorReducer = authErrorReducer, exports.profileReducer = profileReducer, exports.errorsReducer = errorsReducer, exports.orderedReducer = exports.dataReducer = exports.listenersReducer = void 0;\n\nvar _assign2 = _interopRequireDefault(require(\"lodash/fp/assign\")),\n    _setWith2 = _interopRequireDefault(require(\"lodash/fp/setWith\")),\n    _isObject2 = _interopRequireDefault(require(\"lodash/isObject\")),\n    _get2 = _interopRequireDefault(require(\"lodash/get\")),\n    _omit2 = _interopRequireDefault(require(\"lodash/omit\")),\n    _pick2 = _interopRequireDefault(require(\"lodash/pick\")),\n    _constants = require(\"./constants\"),\n    _reducers = require(\"./utils/reducers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || \"[object Arguments]\" === Object.prototype.toString.call(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var source, i = 1; i < arguments.length; i++) source = null == arguments[i] ? {} : arguments[i], i % 2 ? ownKeys(source, !0).forEach(function (key) {\n    _defineProperty(target, key, source[key]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(source).forEach(function (key) {\n    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n  });\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  return key in obj ? Object.defineProperty(obj, key, {\n    value: value,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : obj[key] = value, obj;\n}\n\nvar START = _constants.actionTypes.START,\n    SET = _constants.actionTypes.SET,\n    SET_PROFILE = _constants.actionTypes.SET_PROFILE,\n    MERGE = _constants.actionTypes.MERGE,\n    LOGIN = _constants.actionTypes.LOGIN,\n    LOGOUT = _constants.actionTypes.LOGOUT,\n    LOGIN_ERROR = _constants.actionTypes.LOGIN_ERROR,\n    CLEAR_ERRORS = _constants.actionTypes.CLEAR_ERRORS,\n    REMOVE = _constants.actionTypes.REMOVE,\n    NO_VALUE = _constants.actionTypes.NO_VALUE,\n    SET_LISTENER = _constants.actionTypes.SET_LISTENER,\n    UNSET_LISTENER = _constants.actionTypes.UNSET_LISTENER,\n    AUTHENTICATION_INIT_STARTED = _constants.actionTypes.AUTHENTICATION_INIT_STARTED,\n    AUTHENTICATION_INIT_FINISHED = _constants.actionTypes.AUTHENTICATION_INIT_FINISHED,\n    AUTH_EMPTY_CHANGE = _constants.actionTypes.AUTH_EMPTY_CHANGE,\n    AUTH_LINK_SUCCESS = _constants.actionTypes.AUTH_LINK_SUCCESS,\n    UNAUTHORIZED_ERROR = _constants.actionTypes.UNAUTHORIZED_ERROR,\n    AUTH_UPDATE_SUCCESS = _constants.actionTypes.AUTH_UPDATE_SUCCESS,\n    AUTH_RELOAD_SUCCESS = _constants.actionTypes.AUTH_RELOAD_SUCCESS,\n    PROFILE_UPDATE_SUCCESS = _constants.actionTypes.PROFILE_UPDATE_SUCCESS;\n\nfunction isInitializingReducer() {\n  var state = !!(0 < arguments.length && arguments[0] !== void 0) && arguments[0],\n      action = 1 < arguments.length ? arguments[1] : void 0;\n\n  switch (action.type) {\n    case AUTHENTICATION_INIT_STARTED:\n      return !0;\n\n    case AUTHENTICATION_INIT_FINISHED:\n      return !1;\n\n    default:\n      return state;\n  }\n}\n\nfunction requestingReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      _ref = 1 < arguments.length ? arguments[1] : void 0,\n      type = _ref.type,\n      path = _ref.path;\n\n  return type === START ? _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !0)) : type === NO_VALUE || type === SET ? _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !1)) : state;\n}\n\nfunction requestedReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      _ref2 = 1 < arguments.length ? arguments[1] : void 0,\n      type = _ref2.type,\n      path = _ref2.path;\n\n  return type === START ? _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !1)) : type === NO_VALUE || type === SET ? _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), !0)) : state;\n}\n\nfunction timestampsReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      _ref3 = 1 < arguments.length ? arguments[1] : void 0,\n      type = _ref3.type,\n      path = _ref3.path;\n\n  return type === START || type === NO_VALUE || type === SET ? _objectSpread({}, state, _defineProperty({}, (0, _reducers.getSlashStrPath)(path), Date.now())) : state;\n}\n\nfunction createDataReducer() {\n  var actionKey = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"data\";\n  return function () {\n    var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n        action = 1 < arguments.length ? arguments[1] : void 0;\n\n    switch (action.type) {\n      case SET:\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), action[actionKey], state);\n\n      case MERGE:\n        var previousData = (0, _get2.default)(state, (0, _reducers.getDotStrPath)(action.path), {}),\n            mergedData = (0, _assign2.default)(previousData, action[actionKey]);\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), mergedData, state);\n\n      case NO_VALUE:\n        return (0, _setWith2.default)(Object, (0, _reducers.getDotStrPath)(action.path), null, state);\n\n      case REMOVE:\n        return \"data\" === actionKey ? (0, _reducers.recursiveUnset)((0, _reducers.getDotStrPath)(action.path), state) : state;\n\n      case LOGOUT:\n        if (action.preserve) {\n          if (Array.isArray(action.preserve)) return (0, _pick2.default)(state, action.preserve);\n          if ((0, _isObject2.default)(action.preserve)) return action.preserve[actionKey] ? (0, _reducers.preserveValuesFromState)(state, action.preserve[actionKey], {}) : {};\n          throw new Error(\"Invalid preserve parameter. It must be an Object or an Array\");\n        }\n\n        return {};\n\n      default:\n        return state;\n    }\n  };\n}\n\nfunction authReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {\n    isLoaded: !1,\n    isEmpty: !0\n  },\n      action = 1 < arguments.length ? arguments[1] : void 0;\n\n  switch (action.type) {\n    case LOGIN:\n    case AUTH_UPDATE_SUCCESS:\n      if (!action.auth) return {\n        isEmpty: !0,\n        isLoaded: !0\n      };\n      var auth = action.auth.toJSON ? action.auth.toJSON() : action.auth;\n      return action.preserve && action.preserve.auth ? (0, _reducers.preserveValuesFromState)(state, action.preserve.auth, _objectSpread({}, auth, {\n        isEmpty: !1,\n        isLoaded: !0\n      })) : _objectSpread({}, auth, {\n        isEmpty: !1,\n        isLoaded: !0\n      });\n\n    case AUTH_LINK_SUCCESS:\n    case AUTH_RELOAD_SUCCESS:\n      return action.payload ? _objectSpread({}, action.payload.toJSON ? action.payload.toJSON() : action.payload, {\n        isEmpty: !1,\n        isLoaded: !0\n      }) : {\n        isEmpty: !0,\n        isLoaded: !0\n      };\n\n    case LOGIN_ERROR:\n    case AUTH_EMPTY_CHANGE:\n    case LOGOUT:\n      return action.reauthenticate ? (0, _reducers.preserveValuesFromState)(state, !0, {}) : action.preserve && action.preserve.auth ? (0, _reducers.preserveValuesFromState)(state, action.preserve.auth, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isLoaded: !0,\n        isEmpty: !0\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction authErrorReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : null,\n      action = 1 < arguments.length ? arguments[1] : void 0;\n\n  switch (action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return null;\n\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      return action.authError;\n\n    default:\n      return state;\n  }\n}\n\nfunction profileReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {\n    isLoaded: !1,\n    isEmpty: !0\n  },\n      action = 1 < arguments.length ? arguments[1] : void 0;\n\n  switch (action.type) {\n    case SET_PROFILE:\n      return action.profile ? _objectSpread({}, action.profile, {\n        isEmpty: !1,\n        isLoaded: !0\n      }) : _objectSpread({}, state, {\n        isEmpty: !0,\n        isLoaded: !0\n      });\n\n    case PROFILE_UPDATE_SUCCESS:\n      return Object.assign({}, state, action.payload);\n\n    case LOGIN:\n      return action.preserve && action.preserve.profile ? (0, _reducers.preserveValuesFromState)(state, action.preserve.profile, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isEmpty: !0,\n        isLoaded: !1\n      };\n\n    case LOGOUT:\n    case AUTH_EMPTY_CHANGE:\n      return action.preserve && action.preserve.profile ? (0, _reducers.preserveValuesFromState)(state, action.preserve.profile, {\n        isLoaded: !0,\n        isEmpty: !0\n      }) : {\n        isLoaded: !0,\n        isEmpty: !0\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction errorsReducer() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : [],\n      action = 1 < arguments.length ? arguments[1] : void 0;\n\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      if (!Array.isArray(state)) throw new Error(\"Errors state must be an array\");\n      return [].concat(_toConsumableArray(state), [action.authError]);\n\n    case LOGOUT:\n    case CLEAR_ERRORS:\n      if (action.preserve && action.preserve.errors) {\n        if (\"function\" != typeof action.preserve.errors) throw new Error(\"Preserve for the errors state currently only supports functions\");\n        return state.filter(action.preserve.errors);\n      }\n\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nfunction listenersById() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      _ref4 = 1 < arguments.length ? arguments[1] : void 0,\n      type = _ref4.type,\n      path = _ref4.path,\n      payload = _ref4.payload;\n\n  return type === SET_LISTENER ? _objectSpread({}, state, _defineProperty({}, payload.id, {\n    id: payload.id,\n    path: path\n  })) : type === UNSET_LISTENER ? (0, _omit2.default)(state, [payload.id]) : state;\n}\n\nfunction allListeners() {\n  var state = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : [],\n      _ref5 = 1 < arguments.length ? arguments[1] : void 0,\n      type = _ref5.type,\n      path = _ref5.path,\n      payload = _ref5.payload;\n\n  return type === SET_LISTENER ? [].concat(_toConsumableArray(state), [payload.id]) : type === UNSET_LISTENER ? state.filter(function (lId) {\n    return lId !== payload.id;\n  }) : state;\n}\n\nvar listenersReducer = (0, _reducers.combineReducers)({\n  byId: listenersById,\n  allIds: allListeners\n});\nexports.listenersReducer = listenersReducer;\nvar dataReducer = createDataReducer();\nexports.dataReducer = dataReducer;\nvar orderedReducer = createDataReducer(\"ordered\");\nexports.orderedReducer = orderedReducer;","map":{"version":3,"sources":["../src/reducers.js"],"names":["START","SET","SET_PROFILE","MERGE","LOGIN","LOGOUT","LOGIN_ERROR","CLEAR_ERRORS","REMOVE","NO_VALUE","SET_LISTENER","UNSET_LISTENER","AUTHENTICATION_INIT_STARTED","AUTHENTICATION_INIT_FINISHED","AUTH_EMPTY_CHANGE","AUTH_LINK_SUCCESS","UNAUTHORIZED_ERROR","AUTH_UPDATE_SUCCESS","AUTH_RELOAD_SUCCESS","PROFILE_UPDATE_SUCCESS","actionTypes","state","action","type","path","Date","actionKey","previousData","mergedData","Array","isLoaded","isEmpty","auth","Object","payload","id","lId","listenersReducer","byId","allIds","dataReducer","createDataReducer","orderedReducer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYEA;;AAAAA,IAAAA,K,GAoBEoB,UAAAA,CAAAA,WAAAA,CApBFpB,KAAAA;AAAAA,IACAC,G,GAmBEmB,UAAAA,CAAAA,WAAAA,CAnBFnB,GADAD;AAAAA,IAEAE,W,GAkBEkB,UAAAA,CAAAA,WAAAA,CAlBFlB,WAFAF;AAAAA,IAGAG,K,GAiBEiB,UAAAA,CAAAA,WAAAA,CAjBFjB,KAHAH;AAAAA,IAIAI,K,GAgBEgB,UAAAA,CAAAA,WAAAA,CAhBFhB,KAJAJ;AAAAA,IAKAK,M,GAeEe,UAAAA,CAAAA,WAAAA,CAfFf,MALAL;AAAAA,IAMAM,W,GAcEc,UAAAA,CAAAA,WAAAA,CAdFd,WANAN;AAAAA,IAOAO,Y,GAaEa,UAAAA,CAAAA,WAAAA,CAbFb,YAPAP;AAAAA,IAQAQ,M,GAYEY,UAAAA,CAAAA,WAAAA,CAZFZ,MARAR;AAAAA,IASAS,Q,GAWEW,UAAAA,CAAAA,WAAAA,CAXFX,QATAT;AAAAA,IAUAU,Y,GAUEU,UAAAA,CAAAA,WAAAA,CAVFV,YAVAV;AAAAA,IAWAW,c,GASES,UAAAA,CAAAA,WAAAA,CATFT,cAXAX;AAAAA,IAYAY,2B,GAQEQ,UAAAA,CAAAA,WAAAA,CARFR,2BAZAZ;AAAAA,IAaAa,4B,GAOEO,UAAAA,CAAAA,WAAAA,CAPFP,4BAbAb;AAAAA,IAcAc,iB,GAMEM,UAAAA,CAAAA,WAAAA,CANFN,iBAdAd;AAAAA,IAeAe,iB,GAKEK,UAAAA,CAAAA,WAAAA,CALFL,iBAfAf;AAAAA,IAgBAgB,kB,GAIEI,UAAAA,CAAAA,WAAAA,CAJFJ,kBAhBAhB;AAAAA,IAiBAiB,mB,GAGEG,UAAAA,CAAAA,WAAAA,CAHFH,mBAjBAjB;AAAAA,IAkBAkB,mB,GAEEE,UAAAA,CAAAA,WAAAA,CAFFF,mBAlBAlB;AAAAA,IAmBAmB,sB,GACEC,UAAAA,CAAAA,WAAAA,CADFD,sBAnBAnB;;AA8BK,SAAA,qBAAA,GAAsD;AAAvBqB,MAAAA,KAAuB,GAAA,CAAA,EAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAvBA;AAAAA,MAAeC,MAAQ,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAvBD;;AACpC,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,2BAAA;AACE,aAAA,CAAA,CAAA;;AACF,SAAA,4BAAA;AACE,aAAA,CAAA,CAAA;;AACF;AACE,aANJ,KAMI;AANJ;AAkBK;;AAAA,SAAA,iBAAA,GAAuD;AAA5BD,MAAAA,KAA4B,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,EAARA;AAAAA,MAA4B,IAAA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAA5BA;AAAAA,MAAcE,IAAc,GAAA,IAAA,CAAdA,IAAdF;AAAAA,MAAoBG,IAAQ,GAAA,IAAA,CAARA,IAApBH;;AAA4B,SACpDE,IADoD,KAAA,KACpDA,GADoD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAKrD,CAAA,GAAA,SAAA,CAAA,eAAA,EALqD,IAKrD,CALqD,EAAA,CAAA,CAAA,CAAA,CACpDA,GAAAA,IADoD,KAAA,QACpDA,IAAAA,IADoD,KAAA,GACpDA,GADoD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAWrD,CAAA,GAAA,SAAA,CAAA,eAAA,EAXqD,IAWrD,CAXqD,EAAA,CAAA,CAAA,CAAA,CACpDA,GAaGF,KAdiD;AA0BvD;;AAAA,SAAA,gBAAA,GAAsD;AAA5BA,MAAAA,KAA4B,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,EAARA;AAAAA,MAA4B,KAAA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAA5BA;AAAAA,MAAcE,IAAc,GAAA,KAAA,CAAdA,IAAdF;AAAAA,MAAoBG,IAAQ,GAAA,KAAA,CAARA,IAApBH;;AAA4B,SACnDE,IADmD,KAAA,KACnDA,GADmD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAKpD,CAAA,GAAA,SAAA,CAAA,eAAA,EALoD,IAKpD,CALoD,EAAA,CAAA,CAAA,CAAA,CACnDA,GAAAA,IADmD,KAAA,QACnDA,IAAAA,IADmD,KAAA,GACnDA,GADmD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAWpD,CAAA,GAAA,SAAA,CAAA,eAAA,EAXoD,IAWpD,CAXoD,EAAA,CAAA,CAAA,CAAA,CACnDA,GAaGF,KAdgD;AA0BtD;;AAAA,SAAA,iBAAA,GAAuD;AAA5BA,MAAAA,KAA4B,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,EAARA;AAAAA,MAA4B,KAAA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAA5BA;AAAAA,MAAcE,IAAc,GAAA,KAAA,CAAdA,IAAdF;AAAAA,MAAoBG,IAAQ,GAAA,KAAA,CAARA,IAApBH;;AAA4B,SACpDE,IADoD,KAAA,KACpDA,IAAAA,IADoD,KAAA,QACpDA,IAAAA,IADoD,KAAA,GACpDA,GADoD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAOrD,CAAA,GAAA,SAAA,CAAA,eAAA,EAPqD,IAOrD,CAPqD,EAO7BE,IAAI,CAPyB,GAO7BA,EAP6B,CAAA,CACpDF,GASGF,KAViD;AAsB9D;;AAAA,SAAA,iBAAA,GAA+C;AAApBK,MAAAA,SAAoB,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAR,MAAZA;AAYzB,SAAO,YAAyC;AAApBL,QAAAA,KAAoB,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,EAARA;AAAAA,QAAYC,MAAQ,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAApBD;;AAC1B,YAAQC,MAAM,CAAd,IAAA;AACE,WAAA,GAAA;AACE,eAAO,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,MAAA,EAEL,CAAA,GAAA,SAAA,CAAA,aAAA,EAAcA,MAAM,CAFf,IAEL,CAFK,EAGLA,MAAM,CAHD,SAGC,CAHD,EAAP,KAAO,CAAP;;AAMF,WAAA,KAAA;AAAA,YACQK,YAAY,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAA,KAAA,EAAW,CAAA,GAAA,SAAA,CAAA,aAAA,EAAcL,MAAM,CAA/B,IAAW,CAAX,EADvB,EACuB,CADvB;AAAA,YAEQM,UAAU,GAAG,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,YAAA,EAAqBN,MAAM,CAFhD,SAEgD,CAA3B,CAFrB;AAGE,eAAO,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,MAAA,EAAgB,CAAA,GAAA,SAAA,CAAA,aAAA,EAAcA,MAAM,CAApC,IAAgB,CAAhB,EAAA,UAAA,EAAP,KAAO,CAAP;;AACF,WAAA,QAAA;AACE,eAAO,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,MAAA,EAAgB,CAAA,GAAA,SAAA,CAAA,aAAA,EAAcA,MAAM,CAApC,IAAgB,CAAhB,EAAA,IAAA,EAAP,KAAO,CAAP;;AACF,WAAA,MAAA;AAAA,eACM,WADN,SACM,GACK,CAAA,GAAA,SAAA,CAAA,cAAA,EAAe,CAAA,GAAA,SAAA,CAAA,aAAA,EAAcA,MAAM,CAAnC,IAAe,CAAf,EAFX,KAEW,CADL,GADN,KAAA;;AAKA,WAAA,MAAA;AAEE,YAAIA,MAAM,CAAV,QAAA,EAAqB;AACnB,cAAIO,KAAK,CAALA,OAAAA,CAAcP,MAAM,CAAxB,QAAIO,CAAJ,EACE,OAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAYP,MAAM,CAAzB,QAAO,CAAP;AACK,cAAI,CAAA,GAAA,UAAA,CAAA,OAAA,EAASA,MAAM,CAAnB,QAAI,CAAJ,EACL,OAAOA,MAAM,CAANA,QAAAA,CAAAA,SAAAA,IACH,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BA,MAAM,CAANA,QAAAA,CAA/B,SAA+BA,CAA/B,EADGA,EACH,CADGA,GAAP,EAAA;AAIF,gBAAM,IAAA,KAAA,CAAA,8DAAA,CAAN;AAIF;;AAAA,eAAA,EAAA;;AACF;AACE,eAnCJ,KAmCI;AAnCJ;AAsCH,GAvCC;AAgDK;;AAAA,SAAA,WAAA,GAGL;AAFAD,MAAAA,KAEA,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAFQ;AAAES,IAAAA,QAAQ,EAAA,CAAV,CAAA;AAAmBC,IAAAA,OAAO,EAAA,CAA1B;AAAA,GAARV;AAAAA,MACAC,MACA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAFAD;;AAGA,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,KAAA;AACA,SAAA,mBAAA;AACE,UAAI,CAACA,MAAM,CAAX,IAAA,EACE,OAAO;AACLS,QAAAA,OAAO,EAAA,CADF,CAAA;AAELD,QAAAA,QAAQ,EAAA,CAFV;AAAO,OAAP;AAKF,UAAME,IAAI,GAAGV,MAAM,CAANA,IAAAA,CAAAA,MAAAA,GAAqBA,MAAM,CAANA,IAAAA,CAArBA,MAAqBA,EAArBA,GAA4CA,MAAM,CAA/D,IAAA;AAPF,aASMA,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CATzB,IASMA,GACK,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BA,MAAM,CAANA,QAAAA,CAA/B,IAAA,EAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAELS,QAAAA,OAAO,EAAA,CAFF,CAAA;AAGLD,QAAAA,QAAQ,EAAA,CAbd;AAUW,OAAA,CAAA,CADLR,GATN,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAgBoBS,QAAAA,OAAO,EAAA,CAhB3B,CAAA;AAgBoCD,QAAAA,QAAQ,EAAA,CAhB5C;AAAA,OAAA,CAAA;;AAiBA,SAAA,iBAAA;AACA,SAAA,mBAAA;AAAA,aACOR,MAAM,CADb,OACOA,GADP,aAAA,CAAA,EAAA,EAQQA,MAAM,CAANA,OAAAA,CAAAA,MAAAA,GAAwBA,MAAM,CAANA,OAAAA,CAAxBA,MAAwBA,EAAxBA,GAAkDA,MAAM,CARhE,OAAA,EAAA;AASIS,QAAAA,OAAO,EAAA,CATX,CAAA;AAUID,QAAAA,QAAQ,EAAA,CAVZ;AAAA,OAAA,CACOR,GACI;AACLS,QAAAA,OAAO,EAAA,CADF,CAAA;AAELD,QAAAA,QAAQ,EAAA,CAJd;AAEW,OAFX;;AAYA,SAAA,WAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AAAA,aAEMR,MAAM,CAFZ,cAEMA,GACK,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAAA,CAAA,CAAA,EAHX,EAGW,CADLA,GAIAA,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CANzB,IAMMA,GACK,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BA,MAAM,CAANA,QAAAA,CAA/B,IAAA,EAAqD;AAC1DQ,QAAAA,QAAQ,EAAA,CADkD,CAAA;AAE1DC,QAAAA,OAAO,EAAA,CATb;AAOgE,OAArD,CADLT,GAMG;AAAEQ,QAAAA,QAAQ,EAAA,CAAV,CAAA;AAAkBC,QAAAA,OAAO,EAAA,CAZlC;AAYS,OAZT;;AAaA;AACE,aAhDJ,KAgDI;AAhDJ;AA4DK;;AAAA,SAAA,gBAAA,GAAgD;AAAtBV,MAAAA,KAAsB,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAd,IAARA;AAAAA,MAAcC,MAAQ,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAtBD;;AAC/B,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,KAAA;AACA,SAAA,MAAA;AACE,aAAA,IAAA;;AACF,SAAA,WAAA;AACA,SAAA,kBAAA;AACE,aAAOA,MAAM,CAAb,SAAA;;AACF;AACE,aARJ,KAQI;AARJ;AAoBK;;AAAA,SAAA,cAAA,GAGL;AAFAD,MAAAA,KAEA,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAFQ;AAAES,IAAAA,QAAQ,EAAA,CAAV,CAAA;AAAmBC,IAAAA,OAAO,EAAA,CAA1B;AAAA,GAARV;AAAAA,MACAC,MACA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAFAD;;AAGA,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,WAAA;AAAA,aACOA,MAAM,CADb,OACOA,GADP,aAAA,CAAA,EAAA,EASOA,MAAM,CATb,OAAA,EAAA;AAUIS,QAAAA,OAAO,EAAA,CAVX,CAAA;AAWID,QAAAA,QAAQ,EAAA,CAXZ;AAAA,OAAA,CACOR,GADP,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAIMS,QAAAA,OAAO,EAAA,CAJb,CAAA;AAKMD,QAAAA,QAAQ,EAAA,CALd;AAAA,OAAA,CAAA;;AAaA,SAAA,sBAAA;AACE,aAAOG,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAyBX,MAAM,CAAtC,OAAOW,CAAP;;AACF,SAAA,KAAA;AAAA,aAEMX,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CAFzB,OAEMA,GACK,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BA,MAAM,CAANA,QAAAA,CAA/B,OAAA,EAAwD;AAC7DQ,QAAAA,QAAQ,EAAA,CADqD,CAAA;AAE7DC,QAAAA,OAAO,EAAA,CALb;AAGmE,OAAxD,CADLT,GAMG;AACLS,QAAAA,OAAO,EAAA,CADF,CAAA;AAELD,QAAAA,QAAQ,EAAA,CAVZ;AAQS,OART;;AAYA,SAAA,MAAA;AACA,SAAA,iBAAA;AAAA,aAEMR,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CAFzB,OAEMA,GACK,CAAA,GAAA,SAAA,CAAA,uBAAA,EAAA,KAAA,EAA+BA,MAAM,CAANA,QAAAA,CAA/B,OAAA,EAAwD;AAC7DQ,QAAAA,QAAQ,EAAA,CADqD,CAAA;AAE7DC,QAAAA,OAAO,EAAA,CALb;AAGmE,OAAxD,CADLT,GAMG;AAAEQ,QAAAA,QAAQ,EAAA,CAAV,CAAA;AAAkBC,QAAAA,OAAO,EAAA,CARlC;AAQS,OART;;AASA;AACE,aAvCJ,KAuCI;AAvCJ;AAqDK;;AAAA,SAAA,aAAA,GAA2C;AAApBV,MAAAA,KAAoB,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,EAARA;AAAAA,MAAYC,MAAQ,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAApBD;;AAC5B,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,WAAA;AACA,SAAA,kBAAA;AACE,UAAI,CAACO,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EACE,MAAM,IAAA,KAAA,CAAN,+BAAM,CAAN;AAEF,aAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,EAAA,CAAkBP,MAAM,CAAxB,SAAA,CAAA,CAAA;;AACF,SAAA,MAAA;AACA,SAAA,YAAA;AAEE,UAAIA,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CAAvB,MAAA,EAA+C;AAC7C,YAAI,cAAA,OAAOA,MAAM,CAANA,QAAAA,CAAX,MAAA,EACE,MAAM,IAAA,KAAA,CAAN,iEAAM,CAAN;AAIF,eAAOD,KAAK,CAALA,MAAAA,CAAaC,MAAM,CAANA,QAAAA,CAAbD,MAAAA,CAAP;AAEF;;AAAA,aAAA,EAAA;;AACF;AACE,aApBJ,KAoBI;AApBJ;AAiCF;;AAAA,SAAA,aAAA,GAA4D;AAArCA,MAAAA,KAAqC,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA7B,EAARA;AAAAA,MAAqC,KAAA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAArCA;AAAAA,MAAcE,IAAuB,GAAA,KAAA,CAAvBA,IAAdF;AAAAA,MAAoBG,IAAiB,GAAA,KAAA,CAAjBA,IAApBH;AAAAA,MAA0Ba,OAAW,GAAA,KAAA,CAAXA,OAA1Bb;;AAAqC,SAClDE,IADkD,KAAA,YAClDA,GADkD,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAKnDW,OAAO,CAL4C,EAAA,EAKtC;AACZC,IAAAA,EAAE,EAAED,OAAO,CADC,EAAA;AAEZV,IAAAA,IAAI,EAP8C;AAKtC,GALsC,CAAA,CAClDD,GAAAA,IADkD,KAAA,cAClDA,GAUG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAY,CAACW,OAAO,CAX2B,EAWnC,CAAZ,CAVHX,GAYGF,KAb+C;AA0B5D;;AAAA,SAAA,YAAA,GAA2D;AAArCA,MAAAA,KAAqC,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA7B,EAARA;AAAAA,MAAqC,KAAA,GAAA,IAAA,SAAA,CAAA,MAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAArCA;AAAAA,MAAcE,IAAuB,GAAA,KAAA,CAAvBA,IAAdF;AAAAA,MAAoBG,IAAiB,GAAA,KAAA,CAAjBA,IAApBH;AAAAA,MAA0Ba,OAAW,GAAA,KAAA,CAAXA,OAA1Bb;;AAAqC,SACjDE,IADiD,KAAA,YACjDA,GADiD,GAAA,MAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,EAAA,CAGnCW,OAAO,CAH4B,EAAA,CAAA,CACjDX,GAAAA,IADiD,KAAA,cACjDA,GAIGF,KAAK,CAALA,MAAAA,CAAa,UAAA,GAAA,EAAG;AAAA,WAAIe,GAAG,KAAKF,OAAO,CAAnB,EAAA;AAL8B,GAK9Cb,CAJHE,GAMGF,KAP8C;AAmBpD;;AAAA,IAAMgB,gBAAgB,GAAG,CAAA,GAAA,SAAA,CAAA,eAAA,EAAgB;AAC9CC,EAAAA,IAAI,EAD0C,aAAA;AAE9CC,EAAAA,MAAM,EAFD;AAAyC,CAAhB,CAAzB;;AAcA,IAAMC,WAAW,GAAGC,iBAApB,EAAA;;AAWA,IAAMC,cAAc,GAAGD,iBAAiB,CAAxC,SAAwC,CAAxC","sourcesContent":["import { pick, omit, get, isObject } from 'lodash'\nimport { setWith, assign } from 'lodash/fp'\nimport { actionTypes } from './constants'\nimport {\n  getSlashStrPath,\n  getDotStrPath,\n  recursiveUnset,\n  combineReducers,\n  preserveValuesFromState\n} from './utils/reducers'\n\nconst {\n  START,\n  SET,\n  SET_PROFILE,\n  MERGE,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  CLEAR_ERRORS,\n  REMOVE,\n  NO_VALUE,\n  SET_LISTENER,\n  UNSET_LISTENER,\n  AUTHENTICATION_INIT_STARTED,\n  AUTHENTICATION_INIT_FINISHED,\n  AUTH_EMPTY_CHANGE,\n  AUTH_LINK_SUCCESS,\n  UNAUTHORIZED_ERROR,\n  AUTH_UPDATE_SUCCESS,\n  AUTH_RELOAD_SUCCESS,\n  PROFILE_UPDATE_SUCCESS\n} = actionTypes\n\n/**\n * Reducer for isInitializing state. Changed by `AUTHENTICATION_INIT_STARTED`\n * and `AUTHENTICATION_INIT_FINISHED` actions.\n * @param  {object} [state=false] - Current isInitializing redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function isInitializingReducer(state = false, action) {\n  switch (action.type) {\n    case AUTHENTICATION_INIT_STARTED:\n      return true\n    case AUTHENTICATION_INIT_FINISHED:\n      return false\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requesting state.Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requesting redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestingReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for requested state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current requested redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function requestedReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: false\n      }\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: true\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for timestamps state. Changed by `START`, `NO_VALUE`, and `SET` actions.\n * @param  {object} [state={}] - Current timestamps redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function timestampsReducer(state = {}, { type, path }) {\n  switch (type) {\n    case START:\n    case NO_VALUE:\n    case SET:\n      return {\n        ...state,\n        [getSlashStrPath(path)]: Date.now()\n      }\n    default:\n      return state\n  }\n}\n\n/**\n * Creates reducer for data state. Used to create data and ordered reducers.\n * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n * `NO_VALUE`, and `LOGOUT` actions.\n * @param {string} actionKey - Key of state for which to make reducer (data or ordered)\n * @returns {Function} Data reducer\n * @private\n */\nfunction createDataReducer(actionKey = 'data') {\n  /**\n   * Creates reducer for data state. Used to create data and ordered reducers.\n   * Changed by `SET` or `SET_ORDERED` (if actionKey === 'ordered'), `MERGE`,\n   * `NO_VALUE`, and `LOGOUT` actions.\n   * @param {object} [state={}] - Current data redux state\n   * @param {object} action - Object containing the action that was dispatched\n   * @param {string} action.type - Type of action that was dispatched\n   * @param {string} action.path - Path of action that was dispatched\n   * @returns {object} Data state after reduction\n   * @private\n   */\n  return function dataReducer(state = {}, action) {\n    switch (action.type) {\n      case SET:\n        return setWith(\n          Object,\n          getDotStrPath(action.path),\n          action[actionKey],\n          state\n        )\n      case MERGE:\n        const previousData = get(state, getDotStrPath(action.path), {})\n        const mergedData = assign(previousData, action[actionKey])\n        return setWith(Object, getDotStrPath(action.path), mergedData, state)\n      case NO_VALUE:\n        return setWith(Object, getDotStrPath(action.path), null, state)\n      case REMOVE:\n        if (actionKey === 'data') {\n          return recursiveUnset(getDotStrPath(action.path), state)\n        }\n        return state\n      case LOGOUT:\n        // support keeping data when logging out - #125\n        if (action.preserve) {\n          if (Array.isArray(action.preserve)) {\n            return pick(state, action.preserve) // pick returns a new object\n          } else if (isObject(action.preserve)) {\n            return action.preserve[actionKey]\n              ? preserveValuesFromState(state, action.preserve[actionKey], {})\n              : {}\n          }\n          throw new Error(\n            'Invalid preserve parameter. It must be an Object or an Array'\n          )\n        }\n        return {}\n      default:\n        return state\n    }\n  }\n}\n\n/**\n * Reducer for auth state. Changed by `LOGIN`, `LOGOUT`, and `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current auth redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function authReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case LOGIN:\n    case AUTH_UPDATE_SUCCESS:\n      if (!action.auth) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      const auth = action.auth.toJSON ? action.auth.toJSON() : action.auth\n      // Support keeping data\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          ...auth,\n          isEmpty: false,\n          isLoaded: true\n        })\n      }\n      return { ...auth, isEmpty: false, isLoaded: true }\n    case AUTH_LINK_SUCCESS:\n    case AUTH_RELOAD_SUCCESS:\n      if (!action.payload) {\n        return {\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...(action.payload.toJSON ? action.payload.toJSON() : action.payload),\n        isEmpty: false,\n        isLoaded: true\n      }\n    case LOGIN_ERROR:\n    case AUTH_EMPTY_CHANGE:\n    case LOGOUT:\n      // If it's reauthenticate keep user datas\n      if (action.reauthenticate) {\n        return preserveValuesFromState(state, true, {})\n      }\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.auth) {\n        return preserveValuesFromState(state, action.preserve.auth, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for authError state. Changed by `LOGIN`, `LOGOUT`, `LOGIN_ERROR`, and\n * `UNAUTHORIZED_ERROR` actions.\n * @param  {object} [state={}] - Current authError redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} authError state after reduction\n */\nexport function authErrorReducer(state = null, action) {\n  switch (action.type) {\n    case LOGIN:\n    case LOGOUT:\n      return null\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      return action.authError\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for profile state. Changed by `SET_PROFILE`, `LOGOUT`, and\n * `LOGIN_ERROR` actions.\n * @param  {object} [state={isLoaded: false}] - Current profile redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport function profileReducer(\n  state = { isLoaded: false, isEmpty: true },\n  action\n) {\n  switch (action.type) {\n    case SET_PROFILE:\n      if (!action.profile) {\n        return {\n          ...state,\n          isEmpty: true,\n          isLoaded: true\n        }\n      }\n      return {\n        ...action.profile,\n        isEmpty: false,\n        isLoaded: true\n      }\n    case PROFILE_UPDATE_SUCCESS:\n      return Object.assign({}, state, action.payload)\n    case LOGIN:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return {\n        isEmpty: true,\n        isLoaded: false\n      }\n    case LOGOUT:\n    case AUTH_EMPTY_CHANGE:\n      // Support keeping data when logging out\n      if (action.preserve && action.preserve.profile) {\n        return preserveValuesFromState(state, action.preserve.profile, {\n          isLoaded: true,\n          isEmpty: true\n        })\n      }\n      return { isLoaded: true, isEmpty: true }\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for errors state. Changed by `UNAUTHORIZED_ERROR`, `CLEAR_ERRORS`,\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current errors redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {Function} action.preserve - `not required` Filter function for\n * preserving errors\n * @returns {object} Profile state after reduction\n */\nexport function errorsReducer(state = [], action) {\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case UNAUTHORIZED_ERROR:\n      if (!Array.isArray(state)) {\n        throw new Error('Errors state must be an array')\n      }\n      return [...state, action.authError]\n    case LOGOUT:\n    case CLEAR_ERRORS:\n      // Support keeping errors through a filter function\n      if (action.preserve && action.preserve.errors) {\n        if (typeof action.preserve.errors !== 'function') {\n          throw new Error(\n            'Preserve for the errors state currently only supports functions'\n          )\n        }\n        return state.filter(action.preserve.errors) // run filter function on state\n      }\n      return []\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners ids. Changed by `SET_LISTENER` and `UNSET_LISTENER`\n * actions.\n * @param  {object} [state={}] - Current listenersById redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} listenersById state after reduction (used in listeners)\n * @private\n */\nfunction listenersById(state = {}, { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return {\n        ...state,\n        [payload.id]: {\n          id: payload.id,\n          path\n        }\n      }\n    case UNSET_LISTENER:\n      return omit(state, [payload.id])\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current allListeners redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} allListeners state after reduction (used in listeners)\n * @private\n */\nfunction allListeners(state = [], { type, path, payload }) {\n  switch (type) {\n    case SET_LISTENER:\n      return [...state, payload.id]\n    case UNSET_LISTENER:\n      return state.filter(lId => lId !== payload.id)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for listeners state. Changed by `UNAUTHORIZED_ERROR`\n * and `LOGOUT` actions.\n * @param  {object} [state=[]] - Current listeners redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @returns {object} Profile state after reduction\n */\nexport const listenersReducer = combineReducers({\n  byId: listenersById,\n  allIds: allListeners\n})\n\n/**\n * Reducer for data state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const dataReducer = createDataReducer()\n\n/**\n * Reducer for ordered state. Changed by `SET`, `SET_ORDERED`,`NO_VALUE`, and\n * `LOGOUT` actions.\n * @param  {object} [state={}] - Current data redux state\n * @param  {object} action - Object containing the action that was dispatched\n * @param  {string} action.type - Type of action that was dispatched\n * @param  {string} action.path - Path of action that was dispatched\n * @returns {object} Data state after reduction\n */\nexport const orderedReducer = createDataReducer('ordered')\n"]},"metadata":{},"sourceType":"script"}