{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\")),\n    _propTypes = _interopRequireDefault(require(\"prop-types\")),\n    _ReduxFirestoreContext = _interopRequireDefault(require(\"./ReduxFirestoreContext\")),\n    _createFirebaseInstance = _interopRequireDefault(require(\"./createFirebaseInstance\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ReduxFirestoreProvider() {\n  var props = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n      children = props.children,\n      config = props.config,\n      dispatch = props.dispatch,\n      firebase = props.firebase,\n      createFirestoreInstance = props.createFirestoreInstance,\n      initializeAuth = props.initializeAuth,\n      extendedFirestoreInstance = _react.default.useMemo(function () {\n    var extendedFirebaseInstance = firebase._reactReduxFirebaseExtended ? firebase : (0, _createFirebaseInstance.default)(firebase, config, dispatch),\n        extendedFirestoreInstance = createFirestoreInstance(firebase, config, dispatch);\n    return initializeAuth && extendedFirebaseInstance.initializeAuth(), extendedFirestoreInstance;\n  }, [firebase, config, dispatch, createFirestoreInstance, initializeAuth]);\n\n  return _react.default.createElement(_ReduxFirestoreContext.default.Provider, {\n    value: extendedFirestoreInstance\n  }, children);\n}\n\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: !0\n}, ReduxFirestoreProvider.propTypes = {\n  children: _propTypes.default.node,\n  config: _propTypes.default.object.isRequired,\n  dispatch: _propTypes.default.func.isRequired,\n  createFirestoreInstance: _propTypes.default.func.isRequired,\n  initializeAuth: _propTypes.default.bool,\n  firebase: _propTypes.default.object.isRequired\n};\nvar _default = ReduxFirestoreProvider;\nexports.default = _default, module.exports = exports.default;","map":{"version":3,"sources":["../src/ReduxFirestoreProvider.js"],"names":["props","children","config","dispatch","firebase","createFirestoreInstance","initializeAuth","extendedFirestoreInstance","React","extendedFirebaseInstance","ReduxFirestoreProvider","PropTypes"],"mappings":";;;;;;;;;;;;;;;AAkBA;;AAAA,SAAA,sBAAA,GAA4C;AAAZA,MAAAA,KAAY,GAAA,IAAA,SAAA,CAAA,MAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAARA;AAAAA,MAE5BC,QAFwC,GAQtCD,KARsC,CAAA,QAAZA;AAAAA,MAG5BE,MAHwC,GAQtCF,KARsC,CAAA,MAAZA;AAAAA,MAI5BG,QAJwC,GAQtCH,KARsC,CAAA,QAAZA;AAAAA,MAK5BI,QALwC,GAQtCJ,KARsC,CAAA,QAAZA;AAAAA,MAM5BK,uBANwC,GAQtCL,KARsC,CAAA,uBAAZA;AAAAA,MAO5BM,cAPwC,GAQtCN,KARsC,CAAA,cAAZA;AAAAA,MASxBO,yBAAyB,GAAGC,MAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAChC,YAAM;AAAA,QACEC,wBAAwB,GAAGL,QAAQ,CAARA,2BAAAA,GAAAA,QAAAA,GAE7B,CAAA,GAAA,uBAAA,CAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAHA,QAGA,CAHA;AAAA,QAIEG,yBAAyB,GAAGF,uBAAuB,CAAA,QAAA,EAAA,MAAA,EAJrD,QAIqD,CAJrD;AAUAC,WAAAA,cAIJ,IAHEG,wBAAwB,CAAxBA,cAAAA,EADEH,EAIGC,yBAJHD;AAX0BE,GAAAA,EAiBhC,CAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,uBAAA,EA1BwC,cA0BxC,CAjBgCA,CATJR;;AA4B9B,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,sBAAA,CAAD,OAAC,CAAD,QAAA,EAAA;AAAgC,IAAA,KAAK,EAArC;AAAA,GAAA,EAAA,QAAA,CADF;AAOFU;;AAAAA,sBAAsB,CAAtBA,YAAAA,GAAsC;AACpCJ,EAAAA,cAAc,EAAA,CADsB;AAAA,CAAtCI,EAIAA,sBAAsB,CAAtBA,SAAAA,GAAmC;AACjCT,EAAAA,QAAQ,EAAEU,UAAAA,CAAAA,OAAAA,CADuB,IAAA;AAEjCT,EAAAA,MAAM,EAAES,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAFyB,UAAA;AAGjCR,EAAAA,QAAQ,EAAEQ,UAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAHuB,UAAA;AAIjCN,EAAAA,uBAAuB,EAAEM,UAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAJQ,UAAA;AAKjCL,EAAAA,cAAc,EAAEK,UAAAA,CAAAA,OAAAA,CALiB,IAAA;AAMjCP,EAAAA,QAAQ,EAAEO,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CANuB;AAAA,CAJnCD;eAaeA,sB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReduxFirestoreContext from './ReduxFirestoreContext'\nimport createFirebaseInstance from './createFirebaseInstance'\n\n/**\n * @description Provider for context containing extended firestore instance created\n * by react-redux-firebase\n * @param {object} props - Component props\n * @param {object} props.config - react-redux-firebase config\n * @param {Function} props.dispatch - Redux's dispatch function\n * @param {object} props.firebase - Firebase library\n * @param {boolean} props.initializeAuth - Whether or not to initialize auth\n * @param {Function} props.createFirestoreInstance - Function for creating\n * extended firestore instance\n * @returns {React.Context.Provider} Provider for redux-firestore context\n * @see https://react-redux-firebase.com/docs/api/ReduxFirestoreProvider.html\n */\nfunction ReduxFirestoreProvider(props = {}) {\n  const {\n    children,\n    config,\n    dispatch,\n    firebase,\n    createFirestoreInstance,\n    initializeAuth\n  } = props\n  const extendedFirestoreInstance = React.useMemo(\n    () => {\n      const extendedFirebaseInstance = firebase._reactReduxFirebaseExtended\n        ? firebase\n        : createFirebaseInstance(firebase, config, dispatch)\n      const extendedFirestoreInstance = createFirestoreInstance(\n        firebase,\n        config,\n        dispatch\n      )\n      // Initialize auth if not disabled\n      if (initializeAuth) {\n        extendedFirebaseInstance.initializeAuth()\n      }\n\n      return extendedFirestoreInstance\n    },\n    [firebase, config, dispatch, createFirestoreInstance, initializeAuth]\n  )\n  return (\n    <ReduxFirestoreContext.Provider value={extendedFirestoreInstance}>\n      {children}\n    </ReduxFirestoreContext.Provider>\n  )\n}\n\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: true\n}\n\nReduxFirestoreProvider.propTypes = {\n  children: PropTypes.node,\n  config: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  createFirestoreInstance: PropTypes.func.isRequired,\n  initializeAuth: PropTypes.bool,\n  firebase: PropTypes.object.isRequired\n}\n\nexport default ReduxFirestoreProvider\n"]},"metadata":{},"sourceType":"script"}