{"version":3,"sources":["../src/ReduxFirestoreProvider.js"],"names":["ReduxFirestoreProvider","props","children","config","dispatch","firebase","createFirestoreInstance","initializeAuth","extendedFirestoreInstance","React","useMemo","extendedFirebaseInstance","_reactReduxFirebaseExtended","defaultProps","propTypes","PropTypes","node","object","isRequired","func","bool"],"mappings":"gcAkBA,QAASA,CAAAA,sBAAT,EAA4C,IAAZC,CAAAA,KAAY,wDAAJ,EAAI,CAExCC,QAFwC,CAQtCD,KARsC,CAExCC,QAFwC,CAGxCC,MAHwC,CAQtCF,KARsC,CAGxCE,MAHwC,CAIxCC,QAJwC,CAQtCH,KARsC,CAIxCG,QAJwC,CAKxCC,QALwC,CAQtCJ,KARsC,CAKxCI,QALwC,CAMxCC,uBANwC,CAQtCL,KARsC,CAMxCK,uBANwC,CAOxCC,cAPwC,CAQtCN,KARsC,CAOxCM,cAPwC,CASpCC,yBAAyB,CAAGC,eAAMC,OAAN,CAChC,UAAM,IACEC,CAAAA,wBAAwB,CAAGN,QAAQ,CAACO,2BAAT,CAC7BP,QAD6B,CAE7B,oCAAuBA,QAAvB,CAAiCF,MAAjC,CAAyCC,QAAzC,CAHA,CAIEI,yBAAyB,CAAGF,uBAAuB,CACvDD,QADuD,CAEvDF,MAFuD,CAGvDC,QAHuD,CAJrD,CAcJ,MAJIG,CAAAA,cAIJ,EAHEI,wBAAwB,CAACJ,cAAzB,EAGF,CAAOC,yBACR,CAhB+B,CAiBhC,CAACH,QAAD,CAAWF,MAAX,CAAmBC,QAAnB,CAA6BE,uBAA7B,CAAsDC,cAAtD,CAjBgC,CATQ,CA4B1C,MACE,8BAAC,8BAAD,CAAuB,QAAvB,EAAgC,KAAK,CAAEC,yBAAvC,EACGN,QADH,CAIH,CAEDF,sBAAsB,CAACa,YAAvB,CAAsC,CACpCN,cAAc,GADsB,C,CAItCP,sBAAsB,CAACc,SAAvB,CAAmC,CACjCZ,QAAQ,CAAEa,mBAAUC,IADa,CAEjCb,MAAM,CAAEY,mBAAUE,MAAV,CAAiBC,UAFQ,CAGjCd,QAAQ,CAAEW,mBAAUI,IAAV,CAAeD,UAHQ,CAIjCZ,uBAAuB,CAAES,mBAAUI,IAAV,CAAeD,UAJP,CAKjCX,cAAc,CAAEQ,mBAAUK,IALO,CAMjCf,QAAQ,CAAEU,mBAAUE,MAAV,CAAiBC,UANM,C,cASpBlB,sB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReduxFirestoreContext from './ReduxFirestoreContext'\nimport createFirebaseInstance from './createFirebaseInstance'\n\n/**\n * @description Provider for context containing extended firestore instance created\n * by react-redux-firebase\n * @param {object} props - Component props\n * @param {object} props.config - react-redux-firebase config\n * @param {Function} props.dispatch - Redux's dispatch function\n * @param {object} props.firebase - Firebase library\n * @param {boolean} props.initializeAuth - Whether or not to initialize auth\n * @param {Function} props.createFirestoreInstance - Function for creating\n * extended firestore instance\n * @returns {React.Context.Provider} Provider for redux-firestore context\n * @see https://react-redux-firebase.com/docs/api/ReduxFirestoreProvider.html\n */\nfunction ReduxFirestoreProvider(props = {}) {\n  const {\n    children,\n    config,\n    dispatch,\n    firebase,\n    createFirestoreInstance,\n    initializeAuth\n  } = props\n  const extendedFirestoreInstance = React.useMemo(\n    () => {\n      const extendedFirebaseInstance = firebase._reactReduxFirebaseExtended\n        ? firebase\n        : createFirebaseInstance(firebase, config, dispatch)\n      const extendedFirestoreInstance = createFirestoreInstance(\n        firebase,\n        config,\n        dispatch\n      )\n      // Initialize auth if not disabled\n      if (initializeAuth) {\n        extendedFirebaseInstance.initializeAuth()\n      }\n\n      return extendedFirestoreInstance\n    },\n    [firebase, config, dispatch, createFirestoreInstance, initializeAuth]\n  )\n  return (\n    <ReduxFirestoreContext.Provider value={extendedFirestoreInstance}>\n      {children}\n    </ReduxFirestoreContext.Provider>\n  )\n}\n\nReduxFirestoreProvider.defaultProps = {\n  initializeAuth: true\n}\n\nReduxFirestoreProvider.propTypes = {\n  children: PropTypes.node,\n  config: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  createFirestoreInstance: PropTypes.func.isRequired,\n  initializeAuth: PropTypes.bool,\n  firebase: PropTypes.object.isRequired\n}\n\nexport default ReduxFirestoreProvider\n"],"file":"ReduxFirestoreProvider.js"}