{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.default = exports.v3ErrorMessage = exports.topLevelPaths = exports.supportedAuthProviders = exports.defaultConfig = exports.actionTypes = exports.actionsPrefix = void 0;\nvar actionsPrefix = \"@@reactReduxFirebase\";\nexports.actionsPrefix = \"@@reactReduxFirebase\";\nvar actionTypes = {\n  START: \"\".concat(\"@@reactReduxFirebase\", \"/START\"),\n  SET: \"\".concat(\"@@reactReduxFirebase\", \"/SET\"),\n  REMOVE: \"\".concat(\"@@reactReduxFirebase\", \"/REMOVE\"),\n  MERGE: \"\".concat(\"@@reactReduxFirebase\", \"/MERGE\"),\n  SET_PROFILE: \"\".concat(\"@@reactReduxFirebase\", \"/SET_PROFILE\"),\n  LOGIN: \"\".concat(\"@@reactReduxFirebase\", \"/LOGIN\"),\n  LOGOUT: \"\".concat(\"@@reactReduxFirebase\", \"/LOGOUT\"),\n  LOGIN_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/LOGIN_ERROR\"),\n  NO_VALUE: \"\".concat(\"@@reactReduxFirebase\", \"/NO_VALUE\"),\n  UNAUTHORIZED_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/UNAUTHORIZED_ERROR\"),\n  ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/ERROR\"),\n  CLEAR_ERRORS: \"\".concat(\"@@reactReduxFirebase\", \"/CLEAR_ERRORS\"),\n  SET_LISTENER: \"\".concat(\"@@reactReduxFirebase\", \"/SET_LISTENER\"),\n  UNSET_LISTENER: \"\".concat(\"@@reactReduxFirebase\", \"/UNSET_LISTENER\"),\n  AUTHENTICATION_INIT_STARTED: \"\".concat(\"@@reactReduxFirebase\", \"/AUTHENTICATION_INIT_STARTED\"),\n  AUTHENTICATION_INIT_FINISHED: \"\".concat(\"@@reactReduxFirebase\", \"/AUTHENTICATION_INIT_FINISHED\"),\n  SESSION_START: \"\".concat(\"@@reactReduxFirebase\", \"/SESSION_START\"),\n  SESSION_END: \"\".concat(\"@@reactReduxFirebase\", \"/SESSION_END\"),\n  FILE_UPLOAD_START: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_UPLOAD_START\"),\n  FILE_UPLOAD_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_UPLOAD_ERROR\"),\n  FILE_UPLOAD_PROGRESS: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_UPLOAD_PROGRESS\"),\n  FILE_UPLOAD_COMPLETE: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_UPLOAD_COMPLETE\"),\n  FILE_DELETE_START: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_DELETE_START\"),\n  FILE_DELETE_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_DELETE_ERROR\"),\n  FILE_DELETE_COMPLETE: \"\".concat(\"@@reactReduxFirebase\", \"/FILE_DELETE_COMPLETE\"),\n  AUTH_UPDATE_START: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_UPDATE_START\"),\n  AUTH_UPDATE_SUCCESS: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_UPDATE_SUCCESS\"),\n  AUTH_UPDATE_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_UPDATE_ERROR\"),\n  PROFILE_UPDATE_START: \"\".concat(\"@@reactReduxFirebase\", \"/PROFILE_UPDATE_START\"),\n  PROFILE_UPDATE_SUCCESS: \"\".concat(\"@@reactReduxFirebase\", \"/PROFILE_UPDATE_SUCCESS\"),\n  PROFILE_UPDATE_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/PROFILE_UPDATE_ERROR\"),\n  EMAIL_UPDATE_START: \"\".concat(\"@@reactReduxFirebase\", \"/EMAIL_UPDATE_START\"),\n  EMAIL_UPDATE_SUCCESS: \"\".concat(\"@@reactReduxFirebase\", \"/EMAIL_UPDATE_SUCCESS\"),\n  EMAIL_UPDATE_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/EMAIL_UPDATE_ERROR\"),\n  AUTH_RELOAD_START: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_RELOAD_START\"),\n  AUTH_RELOAD_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_RELOAD_ERROR\"),\n  AUTH_RELOAD_SUCCESS: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_RELOAD_SUCCESS\"),\n  AUTH_LINK_START: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_LINK_START\"),\n  AUTH_LINK_ERROR: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_LINK_ERROR\"),\n  AUTH_LINK_SUCCESS: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_LINK_SUCCESS\"),\n  AUTH_EMPTY_CHANGE: \"\".concat(\"@@reactReduxFirebase\", \"/AUTH_EMPTY_CHANGE\")\n};\nexports.actionTypes = actionTypes;\nvar defaultConfig = {\n  userProfile: null,\n  presence: null,\n  sessions: \"sessions\",\n  enableLogging: !1,\n  logErrors: !0,\n  preserveOnLogout: null,\n  preserveOnEmptyAuthChange: null,\n  resetBeforeLogin: !0,\n  updateProfileOnLogin: !0,\n  enableRedirectHandling: !0,\n  autoPopulateProfile: !1,\n  setProfilePopulateResults: !1,\n  dispatchOnUnsetListener: !0,\n  dispatchRemoveAction: !1,\n  enableEmptyAuthChanges: !0,\n  firebaseStateName: \"firebase\",\n  attachAuthIsReady: !1,\n  keysToRemoveFromAuth: [\"appName\", \"apiKey\", \"authDomain\", \"redirectEventId\", \"stsTokenManager\", \"uid\"],\n  keysToPreserveFromProviderData: [\"email\", \"phoneNumber\", \"photoURL\", \"providerId\", \"uid\"]\n};\nexports.defaultConfig = defaultConfig;\nvar supportedAuthProviders = [\"google\", \"github\", \"twitter\", \"facebook\"];\nexports.supportedAuthProviders = supportedAuthProviders;\nvar topLevelPaths = [\"auth\", \"profile\", \"ordered\", \"data\"];\nexports.topLevelPaths = topLevelPaths;\nvar v3ErrorMessage = \"Context from react-redux not found. If you are using react-redux v6 a v3.*.* version of react-redux-firebase is required. Please checkout the v3 migration guide: http://bit.ly/2SRNdiO\";\nexports.v3ErrorMessage = \"Context from react-redux not found. If you are using react-redux v6 a v3.*.* version of react-redux-firebase is required. Please checkout the v3 migration guide: http://bit.ly/2SRNdiO\";\nvar _default = {\n  actionTypes: actionTypes,\n  defaultConfig: defaultConfig\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/constants.js"],"names":["actionsPrefix","actionTypes","START","SET","REMOVE","MERGE","SET_PROFILE","LOGIN","LOGOUT","LOGIN_ERROR","NO_VALUE","UNAUTHORIZED_ERROR","ERROR","CLEAR_ERRORS","SET_LISTENER","UNSET_LISTENER","AUTHENTICATION_INIT_STARTED","AUTHENTICATION_INIT_FINISHED","SESSION_START","SESSION_END","FILE_UPLOAD_START","FILE_UPLOAD_ERROR","FILE_UPLOAD_PROGRESS","FILE_UPLOAD_COMPLETE","FILE_DELETE_START","FILE_DELETE_ERROR","FILE_DELETE_COMPLETE","AUTH_UPDATE_START","AUTH_UPDATE_SUCCESS","AUTH_UPDATE_ERROR","PROFILE_UPDATE_START","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_ERROR","EMAIL_UPDATE_START","EMAIL_UPDATE_SUCCESS","EMAIL_UPDATE_ERROR","AUTH_RELOAD_START","AUTH_RELOAD_ERROR","AUTH_RELOAD_SUCCESS","AUTH_LINK_START","AUTH_LINK_ERROR","AUTH_LINK_SUCCESS","AUTH_EMPTY_CHANGE","defaultConfig","userProfile","presence","sessions","enableLogging","logErrors","preserveOnLogout","preserveOnEmptyAuthChange","resetBeforeLogin","updateProfileOnLogin","enableRedirectHandling","autoPopulateProfile","setProfilePopulateResults","dispatchOnUnsetListener","dispatchRemoveAction","enableEmptyAuthChanges","firebaseStateName","attachAuthIsReady","keysToRemoveFromAuth","keysToPreserveFromProviderData","supportedAuthProviders","topLevelPaths","v3ErrorMessage"],"mappings":"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","sourcesContent":["/**\n * @constant\n * @type {string}\n * @description Prefix for all actions within library\n * @example\n * import { constants } from 'react-redux-firebase'\n * constants.actionsPrefix === '@@reactReduxFirebase' // true\n */\nexport const actionsPrefix = '@@reactReduxFirebase'\n\n/**\n * @constant\n * @type {object}\n * @description Object containing all action types\n * @property {string} START - `@@reactReduxFirebase/START`\n * @property {string} SET - `@@reactReduxFirebase/SET`\n * @property {string} REMOVE - `@@reactReduxFirebase/REMOVE`\n * @property {string} MERGE - `@@reactReduxFirebase/MERGE`\n * @property {string} SET_PROFILE - `@@reactReduxFirebase/SET_PROFILE`\n * @property {string} LOGIN - `@@reactReduxFirebase/LOGIN`\n * @property {string} LOGOUT - `@@reactReduxFirebase/LOGOUT`\n * @property {string} LOGIN_ERROR - `@@reactReduxFirebase/LOGIN_ERROR`\n * @property {string} NO_VALUE - `@@reactReduxFirebase/NO_VALUE`\n * @property {string} UNAUTHORIZED_ERROR - `@@reactReduxFirebase/UNAUTHORIZED_ERROR`\n * @property {string} ERROR - `@@reactReduxFirebase/ERROR`\n * @property {string} SET_LISTENER - `@@reactReduxFirebase/SET_LISTENER`\n * @property {string} UNSET_LISTENER - `@@reactReduxFirebase/UNSET_LISTENER`\n * @property {string} AUTHENTICATION_INIT_STARTED - `@@reactReduxFirebase/AUTHENTICATION_INIT_STARTED`\n * @property {string} AUTHENTICATION_INIT_FINISHED - `@@reactReduxFirebase/AUTHENTICATION_INIT_FINISHED`\n * @property {string} SESSION_START - `@@reactReduxFirebase/SESSION_START`\n * @property {string} SESSION_END - `@@reactReduxFirebase/SESSION_END`\n * @property {string} FILE_UPLOAD_START - `@@reactReduxFirebase/FILE_UPLOAD_START`\n * @property {string} FILE_UPLOAD_ERROR - `@@reactReduxFirebase/FILE_UPLOAD_ERROR`\n * @property {string} FILE_UPLOAD_PROGRESS - `@@reactReduxFirebase/FILE_UPLOAD_PROGRESS`\n * @property {string} FILE_UPLOAD_COMPLETE - `@@reactReduxFirebase/FILE_UPLOAD_COMPLETE`\n * @property {string} FILE_DELETE_START - `@@reactReduxFirebase/FILE_DELETE_START`\n * @property {string} FILE_DELETE_ERROR - `@@reactReduxFirebase/FILE_DELETE_ERROR`\n * @property {string} FILE_DELETE_COMPLETE - `@@reactReduxFirebase/FILE_DELETE_COMPLETE`\n * @property {string} AUTH_UPDATE_START - `@@reactReduxFirebase/AUTH_UPDATE_START`\n * @property {string} AUTH_UPDATE_ERROR - `@@reactReduxFirebase/AUTH_UPDATE_ERROR`\n * @property {string} AUTH_UPDATE_SUCCESS - `@@reactReduxFirebase/AUTH_UPDATE_SUCCESS`\n * @property {string} PROFILE_UPDATE_START - `@@reactReduxFirebase/PROFILE_UPDATE_START`\n * @property {string} PROFILE_UPDATE_ERROR - `@@reactReduxFirebase/PROFILE_UPDATE_ERROR`\n * @property {string} PROFILE_UPDATE_SUCCESS - `@@reactReduxFirebase/PROFILE_UPDATE_SUCCESS`\n * @property {string} EMAIL_UPDATE_START - `@@reactReduxFirebase/EMAIL_UPDATE_START`\n * @property {string} EMAIL_UPDATE_ERROR - `@@reactReduxFirebase/EMAIL_UPDATE_ERROR`\n * @property {string} EMAIL_UPDATE_SUCCESS - `@@reactReduxFirebase/EMAIL_UPDATE_SUCCESS`\n * @property {string} AUTH_RELOAD_START - `@@reactReduxFirebase/AUTH_RELOAD_START`\n * @property {string} AUTH_RELOAD_ERROR - `@@reactReduxFirebase/AUTH_RELOAD_ERROR`\n * @property {string} AUTH_RELOAD_SUCCESS - `@@reactReduxFirebase/AUTH_RELOAD_SUCCESS`\n * @property {string} AUTH_LINK_START - `@@reactReduxFirebase/AUTH_LINK_START`\n * @property {string} AUTH_LINK_ERROR - `@@reactReduxFirebase/AUTH_LINK_ERROR`\n * @property {string} AUTH_LINK_SUCCESS - `@@reactReduxFirebase/AUTH_LINK_SUCCESS`\n * @property {string} AUTH_EMPTY_CHANGE - `@@reactReduxFirebase/AUTH_LINK_SUCCESS`\n * @example\n * import { actionTypes } from 'react-redux-firebase'\n * actionTypes.SET === '@@reactReduxFirebase/SET' // true\n */\nexport const actionTypes = {\n  START: `${actionsPrefix}/START`,\n  SET: `${actionsPrefix}/SET`,\n  REMOVE: `${actionsPrefix}/REMOVE`,\n  MERGE: `${actionsPrefix}/MERGE`,\n  SET_PROFILE: `${actionsPrefix}/SET_PROFILE`,\n  LOGIN: `${actionsPrefix}/LOGIN`,\n  LOGOUT: `${actionsPrefix}/LOGOUT`,\n  LOGIN_ERROR: `${actionsPrefix}/LOGIN_ERROR`,\n  NO_VALUE: `${actionsPrefix}/NO_VALUE`,\n  UNAUTHORIZED_ERROR: `${actionsPrefix}/UNAUTHORIZED_ERROR`,\n  ERROR: `${actionsPrefix}/ERROR`,\n  CLEAR_ERRORS: `${actionsPrefix}/CLEAR_ERRORS`,\n  SET_LISTENER: `${actionsPrefix}/SET_LISTENER`,\n  UNSET_LISTENER: `${actionsPrefix}/UNSET_LISTENER`,\n  AUTHENTICATION_INIT_STARTED: `${actionsPrefix}/AUTHENTICATION_INIT_STARTED`,\n  AUTHENTICATION_INIT_FINISHED: `${actionsPrefix}/AUTHENTICATION_INIT_FINISHED`,\n  SESSION_START: `${actionsPrefix}/SESSION_START`,\n  SESSION_END: `${actionsPrefix}/SESSION_END`,\n  FILE_UPLOAD_START: `${actionsPrefix}/FILE_UPLOAD_START`,\n  FILE_UPLOAD_ERROR: `${actionsPrefix}/FILE_UPLOAD_ERROR`,\n  FILE_UPLOAD_PROGRESS: `${actionsPrefix}/FILE_UPLOAD_PROGRESS`,\n  FILE_UPLOAD_COMPLETE: `${actionsPrefix}/FILE_UPLOAD_COMPLETE`,\n  FILE_DELETE_START: `${actionsPrefix}/FILE_DELETE_START`,\n  FILE_DELETE_ERROR: `${actionsPrefix}/FILE_DELETE_ERROR`,\n  FILE_DELETE_COMPLETE: `${actionsPrefix}/FILE_DELETE_COMPLETE`,\n  AUTH_UPDATE_START: `${actionsPrefix}/AUTH_UPDATE_START`,\n  AUTH_UPDATE_SUCCESS: `${actionsPrefix}/AUTH_UPDATE_SUCCESS`,\n  AUTH_UPDATE_ERROR: `${actionsPrefix}/AUTH_UPDATE_ERROR`,\n  PROFILE_UPDATE_START: `${actionsPrefix}/PROFILE_UPDATE_START`,\n  PROFILE_UPDATE_SUCCESS: `${actionsPrefix}/PROFILE_UPDATE_SUCCESS`,\n  PROFILE_UPDATE_ERROR: `${actionsPrefix}/PROFILE_UPDATE_ERROR`,\n  EMAIL_UPDATE_START: `${actionsPrefix}/EMAIL_UPDATE_START`,\n  EMAIL_UPDATE_SUCCESS: `${actionsPrefix}/EMAIL_UPDATE_SUCCESS`,\n  EMAIL_UPDATE_ERROR: `${actionsPrefix}/EMAIL_UPDATE_ERROR`,\n  AUTH_RELOAD_START: `${actionsPrefix}/AUTH_RELOAD_START`,\n  AUTH_RELOAD_ERROR: `${actionsPrefix}/AUTH_RELOAD_ERROR`,\n  AUTH_RELOAD_SUCCESS: `${actionsPrefix}/AUTH_RELOAD_SUCCESS`,\n  AUTH_LINK_START: `${actionsPrefix}/AUTH_LINK_START`,\n  AUTH_LINK_ERROR: `${actionsPrefix}/AUTH_LINK_ERROR`,\n  AUTH_LINK_SUCCESS: `${actionsPrefix}/AUTH_LINK_SUCCESS`,\n  AUTH_EMPTY_CHANGE: `${actionsPrefix}/AUTH_EMPTY_CHANGE`\n}\n\n/**\n * @constant\n * @type {object}\n * @name defaultConfig\n * @description Default configuration options\n * @property {string} userProfile - `null` Location on Firebase where user\n * profiles are stored. Often set to `'users'`.\n * @property {Function} profileFactory - `null` Function for changing how profile is written\n * to database (both RTDB and Firestore).\n * @property {string|Function} presence - `null` Location on Firebase where of currently\n * online users is stored. Often set to `'presence'` or `'onlineUsers'`. If a function\n * is passed, the arguments are: `(currentUser, firebase)`.\n * @property {string|Function} sessions - `sessions` Location on Firebase where user\n * sessions are stored (only if presense is set). Often set to `'sessions'` or\n * `'userSessions'`. If a function is passed, the arguments are: `(currentUser, firebase)`.\n * @property {boolean} enableLogging - `false` Whether or not firebase\n * database logging is enabled. Providing `true` turns on error logging\n * (enabled by itself through `logErrors`).\n * @property {boolean} logErrors - `true` Whether or not to log internal\n * Firebase errors (i.e. error querying or writing data) to the javascript\n * console .\n * @property {Array|object} preserveOnLogout - `null` Data parameters to\n * preserve when logging out. If Array is passed, each item represents keys\n * within state.firebase.data preserve. If an object is passed, Keys associate\n * with parts of state to preserve, and the values are Arrays contain keys\n * for keys within that slice of state to preserve.\n * @property {object} preserveOnEmptyAuthChange - `null` Data parameters to\n * preserve when empty auth changes occur. Keys associate with parts of state\n * to preserve, and the values are either Arrays or Functions. If passing an\n * array of keys (i.e. `{ auth: ['key1', 'key2'] }`) - those keys (`'key1'` and\n * `'key2'`) are preserved from that slice of state (`auth`). If passing a\n * function (i.e. `{ auth: (currentAuthState, nextAuthState) => ({}) }`),\n * whatever is returned from the function is set to that slice of state (`auth`).\n * @property {boolean} updateProfileOnLogin - `true` Whether or not to update\n * user profile when logging in.\n * @property {boolean} useFirestoreForProfile - `false` Write profile\n * data to Firestore instead of Real Time Database.\n * @property {boolean} useFirestoreForStorageMeta - `false` Write storage\n * file metadata to Firestore instead of Real Time Database.\n * @property {boolean} resetBeforeLogin - `true` Whether or not to reset auth\n * and profile when logging in (see issue\n * [#254](https://github.com/prescottprue/react-redux-firebase/issues/254)\n * for more details).\n * @property {boolean} enableRedirectHandling - `true` Whether or not to enable\n * redirect handling. This must be disabled if environment is not http/https\n * such as with react-native.\n * @property {Function} onAuthStateChanged - `null` Function that runs when\n * auth state changes.\n * @property {boolean} enableEmptyAuthChanges - `false` Whether or not to enable\n * empty auth changes. When set to true, `onAuthStateChanged` will be fired with,\n * empty auth changes such as `undefined` on initialization\n * (see [#137](https://github.com/prescottprue/react-redux-firebase/issues/137)).\n * Requires `v1.5.0-alpha` or higher.\n * @property {boolean} autoPopulateProfile - `false` REMOVED FROM v2.0.0.\n * Whether or not to automatically populate profile with data loaded through\n * profileParamsToPopulate config.\n * @property {boolean} setProfilePopulateResults - `true` Whether or not to\n * call SET actions for data that results from populating profile to redux under\n * the data path. For example role parameter on profile populated from 'roles'\n * root. True will call SET_PROFILE as well as a SET action with the role that\n * is loaded (places it in data/roles).\n * @property {boolean} dispatchOnUnsetListener - `true` Whether or not to\n * dispatch UNSET_LISTENER when disabling listeners for a specific path. USE WITH CAUTION\n * Setting this to true allows an action to be called that removes data\n * from redux (which might not always be expected).\n * @property {boolean} dispatchRemoveAction - `false` Whether or not to\n * dispatch REMOVE action when calling `remove`. **NOTE** Causes two state\n * updates if a listener is affected by your remove call.\n * @property {string} firebaseStateName - 'firebase' Assumed name of Firebase\n * state (name given when passing reducer to combineReducers). Used in\n * firebaseAuthIsReady promise (see\n * [#264](https://github.com/prescottprue/react-redux-firebase/issues/264)).\n * @property {boolean} attachAuthIsReady - `true` Whether or not to attach\n * firebaseAuthIsReady to store. authIsLoaded can be imported and used\n * directly instead based on preference.\n * @property {boolean} firestoreNamespace - `firestoreHelpers` Namespace for\n * firestore helpers (**WARNING** Changing this will break firestoreConnect HOC.\n * Do **NOT** change to `'firestore'`)\n * @property {Array} keysToRemoveFromAuth - (default at end)\n * list of keys to remove from authentication reponse before writing to profile\n * (currenlty only used for profiles stored on Firestore). `['appName', 'apiKey'\n * , 'authDomain', 'redirectEventId', 'stsTokenManager', 'uid']`\n * @type {object}\n */\nexport const defaultConfig = {\n  userProfile: null,\n  presence: null,\n  sessions: 'sessions',\n  enableLogging: false,\n  logErrors: true,\n  preserveOnLogout: null,\n  preserveOnEmptyAuthChange: null,\n  resetBeforeLogin: true,\n  updateProfileOnLogin: true,\n  enableRedirectHandling: true,\n  autoPopulateProfile: false,\n  setProfilePopulateResults: false,\n  dispatchOnUnsetListener: true,\n  dispatchRemoveAction: false,\n  enableEmptyAuthChanges: true,\n  firebaseStateName: 'firebase',\n  attachAuthIsReady: false,\n  keysToRemoveFromAuth: [\n    'appName',\n    'apiKey',\n    'authDomain',\n    'redirectEventId',\n    'stsTokenManager',\n    'uid'\n  ],\n  keysToPreserveFromProviderData: [\n    'email',\n    'phoneNumber',\n    'photoURL',\n    'providerId',\n    'uid'\n  ]\n}\n\n/**\n * @constant\n * @type {Array}\n * @description List of all external auth providers that are supported\n * (firebase's email/anonymous included by default).\n * @private\n */\nexport const supportedAuthProviders = [\n  'google',\n  'github',\n  'twitter',\n  'facebook'\n]\n\n/**\n * @constant\n * @description Top level redux paths that can be populated\n * @type {Array}\n * @private\n */\nexport const topLevelPaths = ['auth', 'profile', 'ordered', 'data']\n\n/**\n * @constant\n * @description Error message shown if runnning react-redux v6 with a v2.0.0 version\n * of react-redux-firebase\n * @type {string}\n * @private\n */\nexport const v3ErrorMessage =\n  'Context from react-redux not found. If you are using react-redux v6 a v3.*.* version of react-redux-firebase is required. Please checkout the v3 migration guide: http://bit.ly/2SRNdiO'\n\nexport default {\n  actionTypes,\n  defaultConfig\n}\n"]},"metadata":{},"sourceType":"script"}