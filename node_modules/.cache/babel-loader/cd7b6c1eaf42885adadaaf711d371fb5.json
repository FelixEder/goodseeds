{"ast":null,"code":"var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/** Used to match leading and trailing whitespace. */\n\n\nvar reTrimStart = /^\\s+/;\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\n\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;","map":{"version":3,"sources":["/Users/Lara/Documents/Kurser/VT20/Dynwebb/goodseeds/node_modules/lodash/trimStart.js"],"names":["baseToString","require","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","trimStart","string","chars","guard","undefined","replace","strSymbols","start","join","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,cAAD,CADvB;AAAA,IAEIE,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAF7B;AAAA,IAGIG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAH3B;AAAA,IAIII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAJtB;AAMA;;;AACA,IAAIK,WAAW,GAAG,MAAlB;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AACvCF,EAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAD,CAAjB;;AACA,MAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKE,SAAxB,CAAV,EAA8C;AAC5C,WAAOH,MAAM,CAACI,OAAP,CAAeN,WAAf,EAA4B,EAA5B,CAAP;AACD;;AACD,MAAI,CAACE,MAAD,IAAW,EAAEC,KAAK,GAAGT,YAAY,CAACS,KAAD,CAAtB,CAAf,EAA+C;AAC7C,WAAOD,MAAP;AACD;;AACD,MAAIK,UAAU,GAAGT,aAAa,CAACI,MAAD,CAA9B;AAAA,MACIM,KAAK,GAAGX,eAAe,CAACU,UAAD,EAAaT,aAAa,CAACK,KAAD,CAA1B,CAD3B;AAGA,SAAOP,SAAS,CAACW,UAAD,EAAaC,KAAb,CAAT,CAA6BC,IAA7B,CAAkC,EAAlC,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBV,SAAjB","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"]},"metadata":{},"sourceType":"script"}