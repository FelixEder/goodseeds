"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getWatchPath=getWatchPath,exports.getQueryIdFromPath=getQueryIdFromPath,exports.setWatcher=setWatcher,exports.getWatcherCount=getWatcherCount,exports.unsetWatcher=unsetWatcher,exports.applyParamsToQuery=applyParamsToQuery,exports.orderedFromSnapshot=orderedFromSnapshot,exports.populateAndDispatch=populateAndDispatch;var _forEach2=_interopRequireDefault(require("lodash/forEach")),_isNaN2=_interopRequireDefault(require("lodash/isNaN")),_constants=require("../constants"),_populate=require("./populate"),_index=require("./index");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function tryParseToNumber(value){var result=+value;return(0,_isNaN2.default)(result)?value:result}function getWatchPath(event,path){if(!event||""===event||!path)throw new Error("Event and path are required");return"".concat(event,":").concat("/"===path.substring(0,1)?"":"/").concat(path)}function getQueryIdFromPath(path,event){if(!(0,_index.isString)(path))throw new Error("Query path must be a string");var origPath=path,pathSplitted=path.split("#");path=pathSplitted[0];var isQuery=1<pathSplitted.length,queryParams=isQuery?pathSplitted[1].split("&"):[],queryId=isQuery?queryParams.map(function(param){var splittedParam=param.split("=");if("queryId"===splittedParam[0])return splittedParam[1]}).filter(function(q){return q}):void 0;return queryId&&0<queryId.length?event?"".concat(event,":/").concat(queryId):queryId[0]:isQuery?origPath:void 0}function setWatcher(firebase,dispatch,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);return firebase._.watchers[id]?firebase._.watchers[id]++:firebase._.watchers[id]=1,dispatch({type:_constants.actionTypes.SET_LISTENER,path:path,payload:{id:id}}),firebase._.watchers[id]}function getWatcherCount(firebase,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);return firebase._.watchers[id]}function unsetWatcher(firebase,dispatch,event,path,queryId){var id=queryId||getQueryIdFromPath(path,event)||getWatchPath(event,path);path=path.split("#")[0];var watchers=firebase._.watchers;1>=watchers[id]?(delete watchers[id],"first_child"!==event&&"once"!==event&&firebase.database().ref().child(path).off(event)):watchers[id]&&watchers[id]--,dispatch({type:_constants.actionTypes.UNSET_LISTENER,path:path,payload:{id:id}})}function applyParamsToQuery(queryParams,query){var doNotParse=!1;return queryParams&&queryParams.forEach(function(param){switch(param=param.split("="),param[0]){case"orderByValue":query=query.orderByValue(),doNotParse=!0;break;case"orderByPriority":query=query.orderByPriority(),doNotParse=!0;break;case"orderByKey":query=query.orderByKey(),doNotParse=!0;break;case"orderByChild":query=query.orderByChild(param[1]);break;case"limitToFirst":query=query.limitToFirst(parseInt(param[1],10));break;case"limitToLast":query=query.limitToLast(parseInt(param[1],10));break;case"notParsed":doNotParse=!0;break;case"parsed":doNotParse=!1;break;case"equalTo":var equalToParam=doNotParse?param[1]:tryParseToNumber(param[1]);equalToParam="null"===equalToParam?null:equalToParam,equalToParam="false"!==equalToParam&&equalToParam,equalToParam="true"===equalToParam||equalToParam,query=3===param.length?query.equalTo(equalToParam,param[2]):query.equalTo(equalToParam);break;case"startAt":var startAtParam=doNotParse?param[1]:tryParseToNumber(param[1]);startAtParam="null"===startAtParam?null:startAtParam,query=3===param.length?query.startAt(startAtParam,param[2]):query.startAt(startAtParam);break;case"endAt":var endAtParam=doNotParse?param[1]:tryParseToNumber(param[1]);endAtParam="null"===endAtParam?null:endAtParam,query=3===param.length?query.endAt(endAtParam,param[2]):query.endAt(endAtParam);}}),query}function orderedFromSnapshot(snap){if(snap.hasChildren&&!snap.hasChildren())return null;var ordered=[];return snap.forEach&&snap.forEach(function(child){ordered.push({key:child.key,value:child.val()})}),ordered.length?ordered:null}function populateAndDispatch(firebase,dispatch,config){var data=config.data,populates=config.populates,snapshot=config.snapshot,path=config.path,storeAs=config.storeAs;return(0,_populate.promisesForPopulate)(firebase,snapshot.key,data,populates).then(function(results){return(0,_forEach2.default)(results,function(result,path){dispatch({type:_constants.actionTypes.MERGE,path:path,data:result})}),dispatch({type:_constants.actionTypes.SET,path:storeAs||path,data:data,ordered:orderedFromSnapshot(snapshot)}),results}).catch(function(err){return dispatch({type:_constants.actionTypes.ERROR,payload:err}),Promise.reject(err)})}
//# sourceMappingURL=query.js.map